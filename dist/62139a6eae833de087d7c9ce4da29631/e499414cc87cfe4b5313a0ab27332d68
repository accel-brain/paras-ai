<!DOCTYPE+html>+<html>+<head>+<title>エラーメッセージテスト+――PARAs+AI</title><script+src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<link+rel="stylesheet"+href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.8.1/github-markdown.min.css">
++++<script>
++++++++//+フィードバック表示用の変数
++++++++let+feedbackTimeout;

++++++++//+入力フィールドからテキストをコピーする関数
++++++++async+function+copyToClipboard(elementId,+buttonElement)+{
++++++++++++const+element+=+document.getElementById(elementId);
++++++++++++var+text+=+element.innerHTML;
++++++++++++text+=+text+++"+#paras_ai";
++++++++++++if+(!text.trim())+{
++++++++++++++++showFeedback('テキストが入力されていません',+'error');
++++++++++++++++return;
++++++++++++}

++++++++++++try+{
++++++++++++++++await+navigator.clipboard.writeText(text);
++++++++++++++++showFeedback('クリップボードにコピーしました！');
++++++++++++++++
++++++++++++++++//+ボタンの一時的な見た目変更
++++++++++++++++if+(buttonElement)+{
++++++++++++++++++++const+originalText+=+buttonElement.innerHTML;
++++++++++++++++++++buttonElement.classList.add('success');
++++++++++++++++++++buttonElement.innerHTML+=+'<span+class="icon">✅</span>コピー完了！';
++++++++++++++++++++
++++++++++++++++++++setTimeout(()+=>+{
++++++++++++++++++++++++buttonElement.classList.remove('success');
++++++++++++++++++++++++buttonElement.innerHTML+=+originalText;
++++++++++++++++++++},+2000);
++++++++++++++++}
++++++++++++++++
++++++++++++}+catch+(err)+{
++++++++++++++++console.error('コピーに失敗しました:+',+err);
++++++++++++++++showFeedback('コピーに失敗しました',+'error');
++++++++++++}
++++++++}

++++++++//+直接テキストをコピーする関数
++++++++async+function+copyText(text,+buttonElement)+{
++++++++++++try+{
++++++++++++++++await+navigator.clipboard.writeText(text);
++++++++++++++++showFeedback('クリップボードにコピーしました！');
++++++++++++++++
++++++++++++++++//+ボタンの一時的な見た目変更
++++++++++++++++if+(buttonElement)+{
++++++++++++++++++++const+originalText+=+buttonElement.innerHTML;
++++++++++++++++++++buttonElement.classList.add('success');
++++++++++++++++++++buttonElement.innerHTML+=+'<span+class="icon">✅</span>完了';
++++++++++++++++++++
++++++++++++++++++++setTimeout(()+=>+{
++++++++++++++++++++++++buttonElement.classList.remove('success');
++++++++++++++++++++++++buttonElement.innerHTML+=+originalText;
++++++++++++++++++++},+2000);
++++++++++++++++}
++++++++++++++++
++++++++++++}+catch+(err)+{
++++++++++++++++console.error('コピーに失敗しました:+',+err);
++++++++++++++++showFeedback('コピーに失敗しました',+'error');
++++++++++++}
++++++++}

++++++++//+フィードバック表示関数
++++++++function+showFeedback(message,+type+=+'success')+{
++++++++++++const+feedback+=+document.getElementById('feedback');
++++++++++++
++++++++++++//+feedback要素が存在しない場合は何もしない
++++++++++++if+(!feedback)+{
++++++++++++++++console.warn('フィードバック要素が見つかりません');
++++++++++++++++return;
++++++++++++}
++++++++++++
++++++++++++//+既存のタイムアウトをクリア
++++++++++++if+(feedbackTimeout)+{
++++++++++++++++clearTimeout(feedbackTimeout);
++++++++++++}
++++++++++++
++++++++++++//+メッセージとスタイルを設定
++++++++++++if+(type+===+'error')+{
++++++++++++++++feedback.style.background+=+'#f44336';
++++++++++++++++feedback.innerHTML+=+'<span+class="icon">❌</span>'+++message;
++++++++++++}+else+{
++++++++++++++++feedback.style.background+=+'#4CAF50';
++++++++++++++++feedback.innerHTML+=+'<span+class="icon">✅</span>'+++message;
++++++++++++}
++++++++++++
++++++++++++//+フィードバックを表示
++++++++++++feedback.classList.add('show');
++++++++++++
++++++++++++//+3秒後に非表示
++++++++++++feedbackTimeout+=+setTimeout(()+=>+{
++++++++++++++++feedback.classList.remove('show');
++++++++++++},+3000);
++++++++}

++++++++//+Clipboard+API対応チェック（DOM読み込み後に実行）
++++++++document.addEventListener('DOMContentLoaded',+function()+{
++++++++++++if+(!navigator.clipboard)+{
++++++++++++++++showFeedback('お使いのブラウザはクリップボード機能に対応していません',+'error');
++++++++++++}
++++++++});
++++</script>
<style>
++++++++.copy-button+{
++++++++++++background:+linear-gradient(45deg,+#667eea,+#764ba2);
++++++++++++color:+white;
++++++++++++border:+none;
++++++++++++padding:+12px+24px;
++++++++++++border-radius:+8px;
++++++++++++cursor:+pointer;
++++++++++++font-size:+14px;
++++++++++++font-weight:+600;
++++++++++++transition:+all+0.3s+ease;
++++++++++++position:+relative;
++++++++++++overflow:+hidden;
++++++++}

++++++++.copy-button:hover+{
++++++++++++transform:+translateY(-2px);
++++++++++++box-shadow:+0+5px+15px+rgba(102,+126,+234,+0.4);
++++++++}

++++++++.copy-button:active+{
++++++++++++transform:+translateY(0);
++++++++}

++++++++.copy-button.success+{
++++++++++++background:+linear-gradient(45deg,+#4CAF50,+#45a049);
++++++++}
++++++++.copy-icon+{
++++++++++++cursor:+pointer;
++++++++++++padding:+4px+6px;
++++++++++++border-radius:+4px;
++++++++++++font-size:+14px;
++++++++++++margin-left:+8px;
++++++++++++transition:+all+0.3s+ease;
++++++++++++background:+rgba(102,+126,+234,+0.1);
++++++++++++opacity:+0;
++++++++++++visibility:+hidden;
++++++++++++transform:+translateX(10px);
++++++++++++display:+inline-block;
++++++++++++flex-shrink:+0;
++++++++}

++++++++ul+li:hover+.copy-icon,
++++++++ul+li:focus+.copy-icon,
++++++++ul+li.show-icon+.copy-icon+{
++++++++++++opacity:+0.8;
++++++++++++visibility:+visible;
++++++++++++transform:+translateX(0);
++++++++}

++++++++.copy-icon:hover+{
++++++++++++opacity:+1+!important;
++++++++++++background:+rgba(102,+126,+234,+0.2)+!important;
++++++++++++transform:+scale(1.1)+!important;
++++++++}

++++++++.copy-icon:active+{
++++++++++++transform:+scale(0.9)+!important;
++++++++}
++++++++.copy_feedback{
++++++++++++position:+fixed;
++++++++++++top:+20px;
++++++++++++right:+20px;
++++++++++++background:+#4CAF50;
++++++++++++color:+white;
++++++++++++padding:+15px+20px;
++++++++++++border-radius:+8px;
++++++++++++box-shadow:+0+4px+12px+rgba(0,+0,+0,+0.15);
++++++++++++opacity:+0;
++++++++++++transform:+translateX(100px);
++++++++++++transition:+all+0.3s+ease;
++++++++++++z-index:+1000;
++++++++}

++++++++.copy_feedback.show+{
++++++++++++opacity:+1;
++++++++++++transform:+translateX(0);
++++++++}
++++++++.copy_targets+{
+++++++++++++opacity:+0;
+++++++++++++width:+0;
+++++++++++++height:+0;
++++++++}
</style>

<script>
async+function+copyListItem(iconElement)+{
++++try+{
++++++++const+listItem+=+iconElement.parentElement;
++++++++const+textSpan+=+listItem.querySelector('.list-item-text');
++++++++var+text+=+textSpan+?+textSpan.textContent.trim()+:+'';
++++++++if+(!text)+{
++++++++++++showFeedback('コピーするテキストが見つかりません',+'error');
++++++++++++return;
++++++++}
++++++++text+=+text+++"+#paras_ai";
++++++++await+navigator.clipboard.writeText(text);
++++++++showFeedback('リスト項目をコピーしました！');
++++++++
const+originalIcon+=+iconElement.innerHTML;
const+originalWidth+=+iconElement.offsetWidth;+//+元の幅を保存

iconElement.style.color+=+'#4CAF50';
iconElement.style.background+=+'rgba(76,+175,+80,+0.1)';
iconElement.style.width+=+originalWidth+++'px';+//+幅を固定
iconElement.style.display+=+'inline-block';+//+インラインブロックにして幅を適用
iconElement.innerHTML+=+'✅';

setTimeout(()+=>+{
++++iconElement.style.color+=+'';
++++iconElement.style.background+=+'rgba(102,+126,+234,+0.1)';
++++iconElement.style.width+=+'';+//+幅をリセット
++++iconElement.innerHTML+=+originalIcon;
},+2500);
++++++++
++++}+catch+(err)+{
++++++++console.error('コピーに失敗しました:+',+err);
++++++++showFeedback('コピーに失敗しました',+'error');
++++}
}
</script></head><body>+<div+id="copy_feedback"+class="copy_feedback">+++++<span+class="icon">✅</span>クリップボードにコピーしました！+</div>++<div+id="main">+<div+id="container-thema">エラーメッセージテスト</div>+<div+id="container-target-text"></div>+<div+id="container-source-title">情報ソース</div>+<div+id="container-source-text"></div>+<div+id="container-datetime"></div>+</div>++<div+id="score_data"></div>++<div+class="markdown-body"+id="paras_generated_text"></div>++<script>+if+(typeof+marked+!==+'undefined')++{+++++html=+marked.parse('');+++++document.getElementById("paras_generated_text").innerHTML+=+html;+}+</script>++<div>+<div+class="copy_targets"+id="copy_generated_text"></div>+<button+class="copy-button"+onclick="copyToClipboard('copy_generated_text',+this)">+++++<span+class="icon">📋</span>コピーする+</button>+</div>+</body><script>

function+generateCommentsDesign()+{
++++//+<h1>想定される反対意見</h1>を検索し、未処理のもののみを対象とする
++++const+headings+=+document.querySelectorAll('h1');
++++const+targetUls+=+[];
++++
++++for+(let+heading+of+headings)+{
++++++++if+(heading.textContent.trim()+===+'想定される反対意見')+{
++++++++++++//+次のul要素を検索
++++++++++++let+nextElement+=+heading.nextElementSibling;
++++++++++++while+(nextElement)+{
++++++++++++++++if+(nextElement.tagName+===+'UL')+{
++++++++++++++++++++//+既に処理済みかチェック
++++++++++++++++++++if+(!nextElement.classList.contains('opposition-comments-processed'))+{
++++++++++++++++++++++++targetUls.push(nextElement);
++++++++++++++++++++}
++++++++++++++++++++break;
++++++++++++++++}
++++++++++++++++nextElement+=+nextElement.nextElementSibling;
++++++++++++}
++++++++}
++++}
++++
++++if+(targetUls.length+===+0)+{
++++++++console.log('新規で対象となるul要素が見つかりません（既に処理済みの可能性があります）');
++++++++return;
++++}
++++
++++//+Font+Awesomeのスタイルシートを追加（まだ読み込まれていない場合）
++++if+(!document.querySelector('link[href*="font-awesome"]'))+{
++++++++const+fontAwesomeLink+=+document.createElement('link');
++++++++fontAwesomeLink.rel+=+'stylesheet';
++++++++fontAwesomeLink.href+=+'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
++++++++document.head.appendChild(fontAwesomeLink);
++++++++
++++++++//+Font+Awesomeの読み込み完了を待つ
++++++++fontAwesomeLink.onload+=+function()+{
++++++++++++applyStylesToElements();
++++++++};
++++}+else+{
++++++++applyStylesToElements();
++++}
++++
++++function+applyStylesToElements()+{
++++++++//+怒り、嫌悪感、批判、非難を表すFont+Awesomeアイコンの配列
++++++++const+negativeIcons+=+[
++++++++++++'\\556',+//+fa-angry+(怒った顔)
++++++++++++'\\119',+//+fa-frown+(しかめっ面)
++++++++++++'\\57a',+//+fa-dizzy+(めまい/困惑した顔)
++++++++++++'\\5a4',+//+fa-meh-blank+(無表情)
++++++++++++'\\11a'++//+fa-meh+(普通の顔だが批判的な文脈で)
++++++++];
++++++++
++++++++//+ネガティブな感情を表す色の配列
++++++++const+negativeColors+=+[
++++++++++++'#e74c3c',+//+赤
++++++++++++'#c0392b',+//+暗い赤
++++++++++++'#e67e22',+//+オレンジ
++++++++++++'#d35400',+//+暗いオレンジ
++++++++++++'#f39c12',+//+黄色がかったオレンジ
++++++++++++'#8e44ad',+//+紫
++++++++++++'#9b59b6',+//+薄い紫
++++++++++++'#34495e',+//+暗いグレー
++++++++++++'#2c3e50',+//+さらに暗いグレー
++++++++++++'#7f8c8d'++//+グレー
++++++++];
++++++++
++++++++//+対象のul要素すべてにユニークなIDを追加し、スタイルを適用
++++++++const+styleRules+=+[];
++++++++
++++++++targetUls.forEach((targetUl,+index)+=>+{
++++++++++++const+uniqueId+=+'opposition-ul-'+++Date.now()+++'-'+++index;
++++++++++++targetUl.id+=+uniqueId;
++++++++++++
++++++++++++//+処理済みのマークを追加
++++++++++++targetUl.classList.add('opposition-comments-processed');
++++++++++++
++++++++++++//+各ul要素用のスタイル定義を追加
++++++++++++styleRules.push(`
++++++++++++++++#${uniqueId}+{
++++++++++++++++++++background-color:+#f8f9fa;
++++++++++++++++++++border:+1px+solid+#e1e5e9;
++++++++++++++++++++border-radius:+8px;
++++++++++++++++++++padding:+16px;
++++++++++++++++++++margin:+16px+0;
++++++++++++++++++++font-family:+-apple-system,+BlinkMacSystemFont,+"Segoe+UI",+Roboto,+sans-serif;
++++++++++++++++++++list-style:+none;
++++++++++++++++}
++++++++++++++++
++++++++++++++++#${uniqueId}+li+{
++++++++++++++++++++background-color:+#ffffff;
++++++++++++++++++++border:+1px+solid+#e1e5e9;
++++++++++++++++++++border-radius:+6px;
++++++++++++++++++++margin-bottom:+12px;
++++++++++++++++++++padding:+16px+16px+16px+56px;
++++++++++++++++++++position:+relative;
++++++++++++++++++++box-shadow:+0+1px+3px+rgba(0,+0,+0,+0.1);
++++++++++++++++++++line-height:+1.6;
++++++++++++++++++++font-size:+14px;
++++++++++++++++++++color:+#333;
++++++++++++++++++++list-style:+none;
++++++++++++++++++++display:+flex;
++++++++++++++++++++align-items:+center;
++++++++++++++++}
++++++++++++++++
++++++++++++++++#${uniqueId}+li:last-child+{
++++++++++++++++++++margin-bottom:+0;
++++++++++++++++}
++++++++++++++++
++++++++++++++++#${uniqueId}+li::before+{
++++++++++++++++++++content:+var(--random-icon);
++++++++++++++++++++font-family:+"Font+Awesome+6+Free";
++++++++++++++++++++font-weight:+900;
++++++++++++++++++++color:+var(--random-color);
++++++++++++++++++++font-size:+18px;
++++++++++++++++++++position:+absolute;
++++++++++++++++++++left:+16px;
++++++++++++++++++++top:+50%;
++++++++++++++++++++transform:+translateY(-50%);
++++++++++++++++++++background-color:+#ffffff;
++++++++++++++++++++border-radius:+50%;
++++++++++++++++++++width:+32px;
++++++++++++++++++++height:+32px;
++++++++++++++++++++display:+flex;
++++++++++++++++++++align-items:+center;
++++++++++++++++++++justify-content:+center;
++++++++++++++++++++box-shadow:+0+2px+4px+rgba(0,+0,+0,+0.1);
++++++++++++++++++++border:+2px+solid+#e1e5e9;
++++++++++++++++}
++++++++++++++++
++++++++++++++++#${uniqueId}+li:hover+{
++++++++++++++++++++background-color:+#f8f9fa;
++++++++++++++++++++border-color:+#d1d5db;
++++++++++++++++}
++++++++++++++++
++++++++++++++++#${uniqueId}+li:hover::before+{
++++++++++++++++++++transform:+translateY(-50%)+scale(1.1);
++++++++++++++++++++transition:+transform+0.2s+ease;
++++++++++++++++}
++++++++++++`);
++++++++});
++++++++
++++++++//+ヤフーニュースコメント風のスタイルを追加
++++++++const+style+=+document.createElement('style');
++++++++style.textContent+=+styleRules.join('\
');
++++++++document.head.appendChild(style);
++++++++
++++++++//+各ul要素の各li要素を処理
++++++++let+totalProcessed+=+0;
++++++++targetUls.forEach(targetUl+=>+{
++++++++++++const+listItems+=+targetUl.querySelectorAll('li');
++++++++++++listItems.forEach((li,+index)+=>+{
++++++++++++++++//+既に処理済みかチェック
++++++++++++++++if+(li.classList.contains('opposition-li-processed'))+{
++++++++++++++++++++return;+//+処理済みの場合はスキップ
++++++++++++++++}
++++++++++++++++
++++++++++++++++//+ランダムにアイコンを選択
++++++++++++++++const+randomIcon+=+negativeIcons[Math.floor(Math.random()+*+negativeIcons.length)];
++++++++++++++++//+ランダムに色を選択
++++++++++++++++const+randomColor+=+negativeColors[Math.floor(Math.random()+*+negativeColors.length)];
++++++++++++++++
++++++++++++++++//+li要素にカスタムプロパティでアイコンと色を設定
++++++++++++++++li.style.setProperty('--random-icon',+`"${randomIcon}"`);
++++++++++++++++li.style.setProperty('--random-color',+randomColor);
++++++++++++++++
++++++++++++++++//+処理済みのマークを追加
++++++++++++++++li.classList.add('opposition-li-processed');
++++++++++++++++
++++++++++++++++totalProcessed++;
++++++++++++});
++++++++});
++++++++
++++++++console.log(`${targetUls.length}個の新規「想定される反対意見」セクションで、合計${totalProcessed}個の反対意見をヤフーニュースコメント風にスタイリングしました`);
++++}
}
generateCommentsDesign();
</script>

<script>
function+addCopyFuncToParasList(){++++
++++//+ページ内のすべてのli要素を取得
++++const+listItems+=+document.querySelectorAll('#paras_generated_text+li');
++++
++++listItems.forEach(function(item,+index)+{
++++++++//+既に処理済みかチェック
++++++++if+(item.querySelector('.list-item-text'))+{
++++++++++++return;
++++++++}
++++++++++++++++
++++++++//+元のテキストを保存
++++++++const+originalText+=+item.textContent.trim();
++++++++
++++++++//+空の要素はスキップ
++++++++if+(!originalText)+{
++++++++++++return;
++++++++}
++++++++
++++++++//+tabindex属性を動的に追加（キーボードナビゲーション用）
++++++++item.setAttribute('tabindex',+'0');
++++++++
++++++++//+新しい構造を作成
++++++++item.innerHTML+=+'';
++++++++
++++++++//+テキスト部分
++++++++const+textSpan+=+document.createElement('span');
++++++++textSpan.className+=+'list-item-text';
++++++++textSpan.textContent+=+originalText;
++++++++
++++++++//+コピーアイコン
++++++++const+iconSpan+=+document.createElement('span');
++++++++iconSpan.className+=+'copy-icon';
++++++++iconSpan.innerHTML+=+'📋';
++++++++iconSpan.addEventListener('click',+function()+{
++++++++++++copyListItem(this);
++++++++});
++++++++
++++++++//+要素を追加
++++++++item.appendChild(textSpan);
++++++++item.appendChild(iconSpan);
++++++++
++++++++//+ホバーイベント
++++++++item.addEventListener('mouseenter',+function()+{
++++++++++++this.classList.add('show-icon');
++++++++});
++++++++
++++++++item.addEventListener('mouseleave',+function()+{
++++++++++++this.classList.remove('show-icon');
++++++++});
++++++++
++++++++//+フォーカスイベント
++++++++item.addEventListener('focus',+function()+{
++++++++++++this.classList.add('show-icon');
++++++++++++
++++++++++++setTimeout(()+=>+{
++++++++++++++++if+(this+===+document.activeElement)+{
++++++++++++++++++++this.blur();
++++++++++++++++}
++++++++++++},+3000);
++++++++});
++++++++
++++++++item.addEventListener('blur',+function()+{
++++++++++++this.classList.remove('show-icon');
++++++++});
++++++++
++++++++//+キーボードイベント
++++++++item.addEventListener('keydown',+function(e)+{
++++++++++++if+(e.key+===+'Enter'+||+e.key+===+'+')+{
++++++++++++++++e.preventDefault();
++++++++++++++++copyListItem(iconSpan);
++++++++++++}
++++++++});
++++++++
++++++++console.log('Item',+index+++1,+'setup+complete');
++++});
++++
++++console.log('All+list+items+setup+complete');
++++
++++//+Clipboard+API+チェック
++++if+(!navigator.clipboard)+{
++++++++showFeedback('お使いのブラウザはクリップボード機能に対応していません',+'error');
++++}
}
addCopyFuncToParasList();
</script></html>